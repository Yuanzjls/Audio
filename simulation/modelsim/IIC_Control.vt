// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "05/05/2017 22:10:46"
                                                                                
// Verilog Test Bench template for design : IIC_Control
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ps/ 1 ps
module IIC_Control_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg Clk;
reg Go;
reg treg_IIC_Sda;
reg [23:0] IIC_data;
reg Reset;
// wires                                               
wire Ack;
wire End;
wire IIC_Sclk;
wire IIC_Sda;

// assign statements (if any)                          
assign IIC_Sda = treg_IIC_Sda;
IIC_Control i1 (
// port map - connection between master ports and signals/registers   
	.Ack(Ack),
	.Clk(Clk),
	.\End (End),
	.Go(Go),
	.IIC_Sclk(IIC_Sclk),
	.IIC_Sda(IIC_Sda),
	.IIC_data(IIC_data),
	.Reset(Reset)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
   Reset = 1;
	IIC_data = 23'b01010101010101010101010101;
	Go = 0;
	Clk = 1;
	treg_IIC_Sda = 1'bz;
	#40 Go = 1;
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
   #10 Clk <= ~Clk;                                                     
//@eachvec;                                              
// --> end                                             
end                                                    
endmodule

